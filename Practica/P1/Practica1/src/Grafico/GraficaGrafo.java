/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Grafico;

import PA.Punto;
import PB.Solucion;
import java.awt.Color;
import java.awt.PopupMenu;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.math.plot.Plot2DPanel;

/**
 *
 * @author wadad
 */
public class GraficaGrafo extends javax.swing.JDialog {
 
    /**
     * Creates new form Grafica
     */
    public GraficaGrafo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Plot2DPanel update(Solucion s) {
        ArrayList<Punto> p=s.getA();
        if(p!=null){
        double x[]=new double[p.size()];
         double y[]=new double[p.size()];
         
        for (int i=0;i<p.size();i++) {
            x[i]=p.get(i).getX();
            y[i]=p.get(i).getY();
            
        }
        Plot2DPanel plot=new Plot2DPanel();
         plot.setSize(800,600);
         plot.addScatterPlot("Puntos", x,y);
         
         for (int i=0;i<p.size();i++) {
             
          plot.addLinePlot("Linea", x,y);
         
         }
        
       
        return plot;
      }
      else{
          JOptionPane.showMessageDialog(null, "Deberias Cargar Puntos en memoria primero.");
      }
      return null;

    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
